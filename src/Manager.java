// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------
import java.util.*;
//TODO make manager singleton?
public class Manager {

	private String managerName;
	private String email;
	private String phone;
	private final List<Training> trainingList = new ArrayList<>();
	public List<Trainer> trainers = new ArrayList<>();
	public List<Client> clients = new ArrayList<>();

	public void contactInfo() {
		System.out.println("-------Manager contact info-------\n");
		System.out.println("Name: "+ managerName+"\n");
		System.out.println("Email: "+ email+"\n");
		System.out.println("Phone: "+ phone+"\n");

	}

	Manager(String managerName, String email, String phone){
        this.managerName = managerName;
		this.email = email;
		this.phone = phone;
	}

	public void addTrainer(Trainer trainer){
		trainers.add(trainer);
	}

	public void addClient(Client client){
		clients.add(client);
	}

	Manager(){

	}

	public void assignTrainer(Trainer trainer, Training training) {

	}


	public void cancelTraining(Training trainingName) {
		//remove training from the assigned trainer's list
		trainers.forEach((trainer) ->{
			if(Objects.equals(trainer.getName(), trainingName.getTrainer())){
				trainer.trainings.remove(trainingName);
			}
		});
		//remove training from clients list
		clients.forEach((client)->{
			client.trainings.remove(trainingName);
		});

		trainingList.remove(trainingName);
	}


	public void changeTrainingDetails(Training trainingName) {
	}
}
